
classdef robot_state < ros.Message
    %robot_state MATLAB implementation of sam_custom_messages/robot_state
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'sam_custom_messages/robot_state' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '54fa26edcc33c4c2c9089df338171f57' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'Jointstate' 'Pose' 'UserId' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'jointstate' 'pose' 'user_id' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
			 'ros.msggen.sensor_msgs.JointState' ...
			 'ros.msggen.geometry_msgs.Pose' ...
			 '' ...
			 } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        Jointstate
        Pose
        UserId
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'robot_state', 'Header')
            obj.Header = val;
        end
        function set.Jointstate(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.sensor_msgs.JointState'};
            validateattributes(val, validClasses, validAttributes, 'robot_state', 'Jointstate')
            obj.Jointstate = val;
        end
        function set.Pose(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Pose'};
            validateattributes(val, validClasses, validAttributes, 'robot_state', 'Pose')
            obj.Pose = val;
        end
        function set.UserId(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'robot_state', 'UserId');
            obj.UserId = int8(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.sam_custom_messages.robot_state.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.sam_custom_messages.robot_state;
            obj.reload(strObj);
        end
    end
end
